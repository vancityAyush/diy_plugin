// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

User _$UserFromJson(Map<String, dynamic> json) => User(
      MobileRelationshipId: json['MobileRelationshipId'] as int?,
      Email: json['Email'] as String?,
      FirstName: json['FirstName'] as String?,
      MiddleName: json['MiddleName'] as String?,
      LastName: json['LastName'] as String?,
      FullName: json['FullName'] as String?,
      PAN: json['PAN'] as String?,
      DateOfBirth: json['DateOfBirth'] as String?,
      IFSC: json['IFSC'] as String?,
      BankAccountNo: json['BankAccountNo'],
      BankName: json['BankName'] as String?,
      CustomerId: json['CustomerId'],
      BranchCode: json['BranchCode'] as String?,
      MICR_CODE: json['MICR_CODE'] as String?,
      BankBranch: json['BankBranch'] as String?,
      Gender: json['Gender'],
      GenderName: json['GenderName'] as String?,
      MaritalStatus: json['MaritalStatus'] as int?,
      MaritalStatusName: json['MaritalStatusName'] as String?,
      FatherName: json['FatherName'],
      MotherName: json['MotherName'],
      CorrespondenceHouseNo: json['CorrespondenceHouseNo'],
      CorrespondenceStreet: json['CorrespondenceStreet'],
      CorrespondenceLocation: json['CorrespondenceLocation'],
      CorrespondenceCity: json['CorrespondenceCity'],
      CorrespondencePincode: json['CorrespondencePincode'],
      CorrespondenceState: json['CorrespondenceState'] as int?,
      CorrespondenceStateName: json['CorrespondenceStateName'],
      CorrespondenceStateCode: json['CorrespondenceStateCode'],
      CorrespondenceDistrict: json['CorrespondenceDistrict'],
      CorrespondenceCountry: json['CorrespondenceCountry'] as int?,
      CorrespondenceCountryCode: json['CorrespondenceCountryCode'] as int?,
      CorrespondenceCountryName: json['CorrespondenceCountryName'],
      IsPermanentSame: json['IsPermanentSame'] as bool?,
      PermanentHouseNo: json['PermanentHouseNo'],
      PermanentStreet: json['PermanentStreet'],
      PermanentLocation: json['PermanentLocation'],
      PermanentCity: json['PermanentCity'],
      PermanentPincode: json['PermanentPincode'],
      PermanentState: json['PermanentState'] as int?,
      PermanentStateName: json['PermanentStateName'],
      PermanentCountry: json['PermanentCountry'] as int?,
      PermanentCountryName: json['PermanentCountryName'],
      Education: json['Education'],
      AnnualIncome: json['AnnualIncome'] as int?,
      AnnualIncomeName: json['AnnualIncomeName'],
      Occupation: json['Occupation'] as int?,
      OccupationName: json['OccupationName'],
      CompanyName: json['CompanyName'],
      Designation: json['Designation'],
      TradingExperience: json['TradingExperience'] as int?,
      TradingExperienceName: json['TradingExperienceName'],
      IsIndianCitizen: json['IsIndianCitizen'] as bool?,
      IsNotPEP: json['IsNotPEP'] as bool?,
      IsRelatedPEP: json['IsRelatedPEP'] as bool?,
      CountryOfResidence: json['CountryOfResidence'] as int?,
      TIN: json['TIN'],
      TaxIdentificationType: json['TaxIdentificationType'],
      OtherBroker: json['OtherBroker'] as bool?,
      BrokerName: json['BrokerName'],
      BrokerCode: json['BrokerCode'],
      Nomination: json['Nomination'] as bool?,
      PromoCode: json['PromoCode'] as String?,
      PlanId: json['PlanId'] as int?,
      PlanType: json['PlanType'] as int?,
      IncomeProofType: json['IncomeProofType'] as int?,
      IsCashMf: json['IsCashMf'] as bool?,
      IsCommodity: json['IsCommodity'] as bool?,
      LgCode: json['LgCode'],
      SourceCode: json['SourceCode'],
      IsLgLcCodeFilled: json['IsLgLcCodeFilled'] as bool?,
      Source: json['Source'] as String?,
      NewDiy: json['NewDiy'] as bool?,
      CreatedOn: json['CreatedOn'] as String?,
      ModifiedOn: json['ModifiedOn'] as String?,
      LastStageCompleted: json['LastStageCompleted'] as String?,
      Steps: json['Steps'],
      Auth: json['Auth'] == null
          ? null
          : AuthBean.fromJson(json['Auth'] as Map<String, dynamic>),
      KraVerified: json['KraVerified'] as bool?,
      ApprovedOn: json['ApprovedOn'] as String?,
      EmployeeCode: json['EmployeeCode'],
      RequireBankUpload: json['RequireBankUpload'] as bool?,
      RequireIncomeProof: json['RequireIncomeProof'] as bool?,
      RequirePromoProof: json['RequirePromoProof'] as bool?,
      cAddress1: json['cAddress1'],
      cAddress2: json['cAddress2'],
      cAddress3: json['cAddress3'],
      pAddress1: json['pAddress1'],
      pAddress2: json['pAddress2'],
      pAddress3: json['pAddress3'],
      PermanentStateCode: json['PermanentStateCode'],
      PermanentDistrict: json['PermanentDistrict'],
      PermanentCountryCode: json['PermanentCountryCode'],
      VerDesignation: json['VerDesignation'],
      IpvDetails: json['IpvDetails'],
      Utm: json['Utm'],
      DdpiOpted: json['DdpiOpted'] as bool?,
      MtfOpted: json['MtfOpted'] as bool?,
      KraAofApplicable: json['KraAofApplicable'] as bool?,
      ApplicationId: json['ApplicationId'] as int?,
      UAN: json['UAN'] as String?,
      Mobile: json['Mobile'] as String?,
      ApplicationStatus: json['ApplicationStatus'] as int?,
      Mode: json['Mode'] as int?,
      LcCode: json['LcCode'],
      LastSubmittedOn: json['LastSubmittedOn'],
    );

Map<String, dynamic> _$UserToJson(User instance) => <String, dynamic>{
      'MobileRelationshipId': instance.MobileRelationshipId,
      'Email': instance.Email,
      'FirstName': instance.FirstName,
      'MiddleName': instance.MiddleName,
      'LastName': instance.LastName,
      'FullName': instance.FullName,
      'PAN': instance.PAN,
      'DateOfBirth': instance.DateOfBirth,
      'IFSC': instance.IFSC,
      'BankAccountNo': instance.BankAccountNo,
      'BankName': instance.BankName,
      'CustomerId': instance.CustomerId,
      'BranchCode': instance.BranchCode,
      'MICR_CODE': instance.MICR_CODE,
      'BankBranch': instance.BankBranch,
      'Gender': instance.Gender,
      'GenderName': instance.GenderName,
      'MaritalStatus': instance.MaritalStatus,
      'MaritalStatusName': instance.MaritalStatusName,
      'FatherName': instance.FatherName,
      'MotherName': instance.MotherName,
      'CorrespondenceHouseNo': instance.CorrespondenceHouseNo,
      'CorrespondenceStreet': instance.CorrespondenceStreet,
      'CorrespondenceLocation': instance.CorrespondenceLocation,
      'CorrespondenceCity': instance.CorrespondenceCity,
      'CorrespondencePincode': instance.CorrespondencePincode,
      'CorrespondenceState': instance.CorrespondenceState,
      'CorrespondenceStateName': instance.CorrespondenceStateName,
      'CorrespondenceStateCode': instance.CorrespondenceStateCode,
      'CorrespondenceDistrict': instance.CorrespondenceDistrict,
      'CorrespondenceCountry': instance.CorrespondenceCountry,
      'CorrespondenceCountryCode': instance.CorrespondenceCountryCode,
      'CorrespondenceCountryName': instance.CorrespondenceCountryName,
      'IsPermanentSame': instance.IsPermanentSame,
      'PermanentHouseNo': instance.PermanentHouseNo,
      'PermanentStreet': instance.PermanentStreet,
      'PermanentLocation': instance.PermanentLocation,
      'PermanentCity': instance.PermanentCity,
      'PermanentPincode': instance.PermanentPincode,
      'PermanentState': instance.PermanentState,
      'PermanentStateName': instance.PermanentStateName,
      'PermanentCountry': instance.PermanentCountry,
      'PermanentCountryName': instance.PermanentCountryName,
      'Education': instance.Education,
      'AnnualIncome': instance.AnnualIncome,
      'AnnualIncomeName': instance.AnnualIncomeName,
      'Occupation': instance.Occupation,
      'OccupationName': instance.OccupationName,
      'CompanyName': instance.CompanyName,
      'Designation': instance.Designation,
      'TradingExperience': instance.TradingExperience,
      'TradingExperienceName': instance.TradingExperienceName,
      'IsIndianCitizen': instance.IsIndianCitizen,
      'IsNotPEP': instance.IsNotPEP,
      'IsRelatedPEP': instance.IsRelatedPEP,
      'CountryOfResidence': instance.CountryOfResidence,
      'TIN': instance.TIN,
      'TaxIdentificationType': instance.TaxIdentificationType,
      'OtherBroker': instance.OtherBroker,
      'BrokerName': instance.BrokerName,
      'BrokerCode': instance.BrokerCode,
      'Nomination': instance.Nomination,
      'PromoCode': instance.PromoCode,
      'PlanId': instance.PlanId,
      'PlanType': instance.PlanType,
      'IncomeProofType': instance.IncomeProofType,
      'IsCashMf': instance.IsCashMf,
      'IsCommodity': instance.IsCommodity,
      'LgCode': instance.LgCode,
      'SourceCode': instance.SourceCode,
      'IsLgLcCodeFilled': instance.IsLgLcCodeFilled,
      'Source': instance.Source,
      'NewDiy': instance.NewDiy,
      'CreatedOn': instance.CreatedOn,
      'ModifiedOn': instance.ModifiedOn,
      'LastStageCompleted': instance.LastStageCompleted,
      'Steps': instance.Steps,
      'Auth': instance.Auth,
      'KraVerified': instance.KraVerified,
      'ApprovedOn': instance.ApprovedOn,
      'EmployeeCode': instance.EmployeeCode,
      'RequireBankUpload': instance.RequireBankUpload,
      'RequireIncomeProof': instance.RequireIncomeProof,
      'RequirePromoProof': instance.RequirePromoProof,
      'cAddress1': instance.cAddress1,
      'cAddress2': instance.cAddress2,
      'cAddress3': instance.cAddress3,
      'pAddress1': instance.pAddress1,
      'pAddress2': instance.pAddress2,
      'pAddress3': instance.pAddress3,
      'PermanentStateCode': instance.PermanentStateCode,
      'PermanentDistrict': instance.PermanentDistrict,
      'PermanentCountryCode': instance.PermanentCountryCode,
      'VerDesignation': instance.VerDesignation,
      'IpvDetails': instance.IpvDetails,
      'Utm': instance.Utm,
      'DdpiOpted': instance.DdpiOpted,
      'MtfOpted': instance.MtfOpted,
      'KraAofApplicable': instance.KraAofApplicable,
      'ApplicationId': instance.ApplicationId,
      'UAN': instance.UAN,
      'Mobile': instance.Mobile,
      'ApplicationStatus': instance.ApplicationStatus,
      'Mode': instance.Mode,
      'LcCode': instance.LcCode,
      'LastSubmittedOn': instance.LastSubmittedOn,
    };
